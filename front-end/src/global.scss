/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import '~@ionic/angular/css/core.css';

/* Basic CSS for apps built with Ionic */
@import '~@ionic/angular/css/normalize.css';
@import '~@ionic/angular/css/structure.css';
@import '~@ionic/angular/css/typography.css';
@import '~@ionic/angular/css/display.css';

/* Optional CSS utils that can be commented out */
@import '~@ionic/angular/css/padding.css';
@import '~@ionic/angular/css/float-elements.css';
@import '~@ionic/angular/css/text-alignment.css';
@import '~@ionic/angular/css/text-transformation.css';
@import '~@ionic/angular/css/flex-utils.css';

//
// IDEA
//

@import '../node_modules/@idea-ionic/common/css/global.scss';

@import '../node_modules/@swimlane/ngx-datatable/index.css';
@import '../node_modules/@swimlane/ngx-datatable/themes/material.scss';
@import '../node_modules/@swimlane/ngx-datatable/themes/dark.scss';
@import '../node_modules/@swimlane/ngx-datatable/assets/icons.css';

//
// PROJECT custom
//

@import 'typeface-poppins';

:root {
  --ion-font-family: 'Poppins';
  letter-spacing: normal;
}

.maxWidthContainer {
  max-width: 700px;
  margin: 0 auto !important;
  padding-bottom: 80px;
}

ion-content {
  --background: var(--ion-color-white-shade);
}

ion-list.aList {
  background: transparent;
  ion-list-header {
    border-top: none;
    margin: 20px 0 5px 0;
    padding-left: 10px;
    padding-right: 10px;
    @media only screen and (max-width: 767px) {
      padding-left: 16px;
      padding-right: 16px;
    }
    ion-label {
      margin-right: 12px;
      h1,
      h2,
      h3 {
        font-weight: 500;
      }
      h1 {
        font-size: 1.4em;
        margin-bottom: 5px;
      }
      h2 {
        font-size: 1.2em;
        margin-bottom: 5px;
      }
      h3 {
        font-size: 1.1em;
        margin-bottom: 5px;
      }
      ion-badge {
        margin: 3px 3px 10px 0;
        font-size: 0.7em;
      }
      p:last-of-type {
        margin-bottom: 10px;
      }
    }
  }
  ion-item-divider {
    background-color: transparent;
    border-bottom: none;
    padding-top: 6px;
    padding-left: 10px;
    h3 {
      color: var(--ion-color-dark);
      font-weight: 500;
    }
  }
  ion-item {
    --highlight-color-focused: var(--ion-color-primary);
    --highlight-color-valid: var(--ion-color-primary);
    --highlight-color-invalid: var(--ion-color-primary);
    ion-label p {
      color: var(--ion-color-step-600) !important;
    }
  }
  ion-row.row,
  ion-item:not([color]) {
    // all the three definitions are important
    background-color: var(--ion-color-white);
    --ion-background-color: var(--ion-color-white);
    --background: var(--ion-color-white);
  }
  ion-row.row.odd,
  ion-item:not([color]).odd {
    // all the three definitions are important
    background-color: var(--ion-color-light);
    --ion-background-color: var(--ion-color-light);
    --background: var(--ion-color-light);
  }
  ion-row.row ion-item,
  ion-row.headerRow ion-item:not([color]) {
    // all the three definitions are important
    background-color: transparent;
    --ion-background-color: transparent;
    --background: transparent;
  }
}

ion-searchbar {
  --background: var(--ion-color-white) !important;
  --box-shadow: rgba(0, 0, 0, 0.09) 0px 3px 12px !important;
}

ion-card {
  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.05) !important;
}

ion-button:not([fill='clear'], [fill='outline']) {
  --box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
}
ion-toolbar ion-buttons ion-button,
ion-list-header ion-button,
ion-button[fill='clear'] {
  font-weight: 500;
  --box-shadow: none !important;
}
ion-toolbar ion-buttons ion-button[fill='solid'] {
  margin-right: 8px;
  margin-left: 8px;
}

ion-item.noElements,
ion-col.noElements {
  ion-label {
    font-style: italic;
  }
}

ion-toolbar ion-buttons[slot='start'] ion-img {
  height: 30px;
  max-width: 60px;
  margin-left: 16px;
}

ion-badge {
  font-weight: 600;
}

.angular-editor-wrapper {
  background-color: var(--ion-color-white) !important;
}
.angular-editor-toolbar {
  border-color: var(--ion-color-light) !important;
}
.angular-editor-textarea {
  border-color: var(--ion-color-light-shade) !important;
  color: var(--ion-color-white-contrast) !important;
}
.angular-editor-toolbar {
  background-color: var(--ion-color-light) !important;
}
.angular-editor-button {
  background-color: var(--ion-color-white) !important;
  border-color: var(--ion-color-light) !important;
  color: var(--ion-color-white-contrast) !important;
}
div.internalPSpacing p {
  // needs to be global to work (angular editor)
  margin: 4px 0;
}

.mediumPopover {
  --width: 350px;
}
.largePopover {
  --width: 700px;
  @media only screen and (max-width: 767px) {
    --width: 350px;
  }
}
.badgePopover {
  --width: 500px;
  @media only screen and (max-width: 767px) {
    --width: 350px;
  }
  &::part(content) {
    top: 50% !important;
    left: 50% !important;
    transform: translate(-50%, -50%) !important;
  }
}

ion-modal {
  @media only screen and (min-width: 768px) {
    --border-radius: 8px;
  }
  ion-header ion-toolbar ion-title {
    font-size: 1.1em;
  }
}

app-html-editor {
  --app-html-editor-margin: 16px 2px;
  --app-html-editor-padding: 20px 16px;
  --app-html-editor-background-color: var(--ion-color-white-tint);
  --app-html-editor-box-shadow: rgba(9, 30, 66, 0.15) 0px 1px 1px, rgba(9, 30, 66, 0.1) 0px 0px 1px 1px;
  --app-html-editor-border-radius: 8px;
  --app-html-editor-color: var(--ion-color-step-800);
}

.selectableAlert .alert-message {
  -webkit-user-select: all !important;
  -moz-user-select: all !important;
  -ms-user-select: all !important;
  user-select: all !important;
}

hr {
  clear: both;
  height: 1px;
  min-height: 0;
  margin: 30px auto;
  padding: 0;
  border: none;
  border-top: medium solid rgba(var(--ion-color-medium-rgb), 0.1);
  width: 100%;
}

ion-item input[type='datetime-local'] {
  border: none;
  margin: 6px 0;
}

ion-segment[scrollable] {
  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
  ion-segment-button {
    text-transform: none;
    letter-spacing: normal;
  }
}

//
// DATATABLE
//

// stick the footer to the bottom
.ngx-datatable {
  position: absolute !important;
  height: auto !important;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  > div.visible {
    height: 100%;
    display: flex;
    flex-direction: column;
    > datatable-body {
      flex-basis: 100%;
    }
  }
}

// reduce pager size (60% -> 45%)
.ngx-datatable .datatable-footer .datatable-pager {
  flex: 1 1 45% !important;
}

// not found message padding
.ngx-datatable .empty-row {
  padding: 20px;
}

// theme (customization)
.ngx-datatable.material,
.ngx-datatable.dark {
  background: var(--ion-color-white-shade);
  color: var(--ion-color-white-contrast);
  border-color: transparent;

  .datatable-header,
  .datatable-header .datatable-header-cell,
  .datatable-footer {
    background: var(--ion-color-white-shade);
    color: var(--ion-color-light-contrast);
  }

  .datatable-body {
    background: var(--ion-color-white);

    .datatable-body-row {
      border-top-color: var(--ion-color-light);

      &:hover,
      &:focus {
        background-color: var(--ion-color-light) !important;
      }

      &.active,
      &.active:hover,
      &.active:focus,
      &.active .datatable-row-group,
      &.active:hover .datatable-row-group,
      &.active:focus .datatable-row-group {
        background-color: var(--ion-color-light-tint) !important;
        color: var(--ion-color-light-contrast) !important;
      }
    }
  }
  .datatable-footer {
    .datatable-pager {
      ul {
        li {
          &:not(.disabled) {
            &.active a,
            &:hover a {
              background-color: var(--ion-color-light-tint);
            }
          }
        }
      }
      a {
        color: var(--ion-color-light-contrast);
      }
    }
  }
  .datatable-summary-row {
    .datatable-body-row {
      background-color: var(--ion-color-light);
      &:hover {
        background-color: var(--ion-color-light);
      }
    }
  }
}

// center cell labels and checkboxes vertically (differs based on the theme)
.ngx-datatable.dark {
  .datatable-body-cell-label span,
  .datatable-header-cell span {
    vertical-align: middle;
  }
}
.ngx-datatable.material {
  .datatable-header-cell .datatable-checkbox,
  .datatable-body-cell .datatable-checkbox {
    top: -2px;
  }
  .datatable-body-cell-label span {
    line-height: 1;
  }
}

.alert-wrapper {
  .alert-button-role-cancel {
    color: var(--ion-color-medium);
  }
  .alert-button-role-destructive {
    color: var(--ion-color-danger);
  }
}
